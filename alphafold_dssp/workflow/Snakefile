
from collections import defaultdict

configfile: "workflow/config.yml"

pdb    = "%s/AF-{name}-F{part}-model_v%s.pdb" % (config['alphafold'], config['version'])
dssp   = "dssp/%s_%s/AF-{name}-F{part}.txt" % (config['organism'], config['version'])
parsed = "parsed/%s_%s/AF-{name}.csv" % (config['organism'], config['version'])

fasta = "database/alphafold_%s_v%s.fasta" % (config['organism'], config['version'])
head  = "example/alphafold_%s_head1000.fasta" % config['organism']
peptides = "example/alphafold_%s_peptides.txt" % config['organism']

names, parts ,= glob_wildcards(pdb)
assert names, "No pdb files found - please check the path and that the files are unpacked"

name_parts = defaultdict(list)
for i in range(len(names)):
	name = names[i]
	part = parts[i]
	name_parts[name].append(part)

rule all:
	input:
		fasta, head, peptides

rule dssp:
	input:
		pdb
	output:
		dssp
	shell:
		"dssp -i {input} -o {output}"

rule parse:
	input:
		pdbs  = lambda w: expand(pdb,  name = w.name, part = name_parts[w.name]),
		dssps = lambda w: expand(dssp, name = w.name, part = name_parts[w.name])
	output:
		parsed 
	script:
		"scripts/parse.py"

rule collect:
	input:
		parsed = expand(parsed, name = name_parts.keys()),
		uniprot = config['uniprot']
	output:
		fasta
	script:
		"scripts/collect.py"

rule fasta_head:
	input:
		fasta
	output:
		head
	params:
		n = 1000
	shell:
		"seqkit head -n1000 {input} -o {output}"

rule fasta_peptides:
	input:
		fasta
	output:
		peptides
	params:
		min_len = 6,
		max_len = 10
	script:
		"scripts/random_peptides.py"
